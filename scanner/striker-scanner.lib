#!/usr/bin/perl

use strict;
use warnings;


# This initializes a call; reads variables, etc.
sub initialize
{
	my ($caller) = @_;
	
	# Set default configuration variable values
	my ($conf) = initialize_conf($caller);

	# First up, read in the default strings file.
	read_strings($conf);

	# Read in the configuration file. If the file doesn't exist, initial 
	# setup will be triggered.
	read_configuration_file($conf, $caller);
	
	return($conf);
}

# Set default configuration variable values
sub initialize_conf
{
	my ($caller) = @_;
	
	my $conf = {
		path				=>	{
			config_file			=>	"/etc/an/striker.conf",
			languages			=>	"./striker-scanner.xml",
			log_file			=>	"/var/log/striker-scanner.log",
		},
		# These are setuid root C-wrapper scripts that allow apache to
		# make system calls as root.
		setuid				=>	{
			'call_gather-system-info'	=>	"./call_gather-system-info",
		},
		sys				=>	{
			error_limit			=>	1000,
			language			=>	"en_CA",
			html_lang			=>	"en",
			skin				=>	"alteeve",
			version				=>	"0.0.1",
			log_level			=>	3,
			use_24h				=>	1,			# Set to 0 for am/pm time, 1 for 24h time
			date_seperator			=>	"-",			# Should put these in the strings.xml file
			time_seperator			=>	":",
			log_language			=>	"en_CA",
			system_timezone			=>	"America/Toronto",
		},
		db				=>	{
			name				=>	"striker",
			user				=>	"alteeve",
			password			=>	"secret",
		},
		# Config values needed to managing strings
		strings				=>	{
			encoding			=>	"",
			force_utf8			=>	0,
			xml_version			=>	"",
		},
		# The actual strings
		string				=>	{},
	};
	
	return($conf);
}

1;
